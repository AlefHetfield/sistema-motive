
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ClientScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cpf: 'cpf',
  areaInteresse: 'areaInteresse',
  corretor: 'corretor',
  responsavel: 'responsavel',
  observacoes: 'observacoes',
  agencia: 'agencia',
  modalidade: 'modalidade',
  status: 'status',
  createdAt: 'createdAt',
  ultimaAtualizacao: 'ultimaAtualizacao',
  dataAssinaturaContrato: 'dataAssinaturaContrato'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.PropertyScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  address: 'address',
  price: 'price',
  area: 'area',
  photoUrl: 'photoUrl',
  latitude: 'latitude',
  longitude: 'longitude'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Client: 'Client',
  User: 'User',
  Property: 'Property'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Alefs\\OneDrive\\Área de Trabalho\\PROJETOS MOTIVE\\sistema-motive\\api\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Alefs\\OneDrive\\Área de Trabalho\\PROJETOS MOTIVE\\sistema-motive\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "PRISMA_DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../api/generated/client\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  // Usa a URL do Accelerate para a aplicação e a directUrl para migrações\n  url       = env(\"PRISMA_DATABASE_URL\")\n  directUrl = env(\"DATABASE_URL\")\n}\n\n// =================================\n// MODELOS DA APLICAÇÃO\n// =================================\n\nmodel Client {\n  id                     Int       @id @default(autoincrement())\n  nome                   String?\n  cpf                    String?\n  areaInteresse          String?\n  corretor               String?\n  responsavel            String?\n  observacoes            String?\n  agencia                String?\n  modalidade             String?\n  status                 String?\n  createdAt              DateTime  @default(now()) @map(\"createdAt\")\n  ultimaAtualizacao      DateTime? @updatedAt @map(\"ultimaAtualizacao\")\n  dataAssinaturaContrato DateTime? @db.Date\n\n  @@map(\"clients\")\n}\n\nmodel User {\n  id        Int      @id @default(autoincrement())\n  nome      String?\n  email     String?  @unique\n  role      String?\n  createdAt DateTime @default(now()) @map(\"createdAt\")\n\n  @@map(\"users\")\n}\n\nmodel Property {\n  id          Int     @id @default(autoincrement())\n  title       String\n  description String?\n  address     String\n  price       Float?\n  area        Float?\n  photoUrl    String?\n  // Campos para geolocalização\n  latitude    Float?\n  longitude   Float?\n\n  @@map(\"properties\")\n}\n",
  "inlineSchemaHash": "f6777c08b956096707f7af8461b9681812ce8d4ce344b5faa212a26934abb267",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Client\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cpf\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"areaInteresse\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"corretor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responsavel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"observacoes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agencia\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modalidade\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"createdAt\"},{\"name\":\"ultimaAtualizacao\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"ultimaAtualizacao\"},{\"name\":\"dataAssinaturaContrato\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"clients\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"createdAt\"}],\"dbName\":\"users\"},\"Property\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"area\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"photoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":\"properties\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    PRISMA_DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['PRISMA_DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.PRISMA_DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

